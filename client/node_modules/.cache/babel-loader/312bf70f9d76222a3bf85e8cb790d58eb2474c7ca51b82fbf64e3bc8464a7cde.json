{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\HeyHiJob\\\\Website\\\\client\\\\src\\\\page\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Home.css';\nimport { useNavigate } from 'react-router-dom';\nimport chatBotIcon from '../icon/chatBotIcon.png';\nimport userIcon from '../icon/userIcon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n  const navigate = useNavigate();\n  const handleSend = async () => {\n    if (input.trim() === 'MCQ') {\n      navigate(\"/question\");\n    }\n    if (input.trim() !== '') {\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }]);\n      setIsThinking(true);\n      try {\n        const response = await fetch('https://websitechatbotbackend.onrender.com/ChatBotAIWebsite', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: input\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const botMessage = {\n          text: data.response,\n          sender: 'bot'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } catch (error) {\n        const errorMessage = {\n          text: 'Network error: ' + error.message,\n          sender: 'bot'\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n      } finally {\n        setIsThinking(false);\n      }\n      setInput('');\n    }\n  };\n\n  // Function to handle Enter key press\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadPDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.sender === 'user' ? userIcon : chatBotIcon,\n              alt: `${message.sender} icon`,\n              className: \"message-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)), isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-is-thinking\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I am thinking about your question hihi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\",\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"VCiaCBuhggi83wDBPFaI5Cl73ao=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","chatBotIcon","userIcon","jsxDEV","_jsxDEV","Home","_s","messages","setMessages","input","setInput","isThinking","setIsThinking","navigate","handleSend","trim","text","sender","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","status","data","json","botMessage","prevMessages","error","errorMessage","handleKeyPress","event","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","alt","type","value","onChange","e","target","placeholder","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Documents/HeyHiJob/Website/client/src/page/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Home.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport chatBotIcon from '../icon/chatBotIcon.png'\r\nimport userIcon from '../icon/userIcon.png'\r\nconst Home = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isThinking, setIsThinking] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() === 'MCQ') {\r\n      navigate(\"/question\");\r\n    }\r\n    if (input.trim() !== '') {\r\n      setMessages([...messages, { text: input, sender: 'user' }]);\r\n      setIsThinking(true);\r\n      try {\r\n        const response = await fetch('https://websitechatbotbackend.onrender.com/ChatBotAIWebsite', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ message: input }),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n  \r\n        const data = await response.json();\r\n        const botMessage = { text: data.response, sender: 'bot' };\r\n        setMessages(prevMessages => [...prevMessages, botMessage]);\r\n      } catch (error) {\r\n        const errorMessage = { text: 'Network error: ' + error.message, sender: 'bot' };\r\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n      } finally {\r\n        setIsThinking(false);\r\n      }\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  // Function to handle Enter key press\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='uploadPDF'></div>\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-box\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={`chat-bubble ${message.sender}`}>\r\n              <div className=\"message-content\">\r\n                <img\r\n                  src={message.sender === 'user' ? userIcon : chatBotIcon}\r\n                  alt={`${message.sender} icon`}\r\n                  className=\"message-icon\"\r\n                />\r\n                <span className=\"message-text\">{message.text}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isThinking && (\r\n            <div className='chatbot-is-thinking'>\r\n              <p>I am thinking about your question hihi</p>\r\n              <div className='dot'></div>\r\n              <div className='dot'></div>\r\n              <div className='dot'></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            onKeyPress={handleKeyPress} \r\n          />\r\n          <button onClick={handleSend}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}