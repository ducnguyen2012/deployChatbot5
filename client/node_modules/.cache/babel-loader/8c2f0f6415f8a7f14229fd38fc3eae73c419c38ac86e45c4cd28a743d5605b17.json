{"ast":null,"code":"import React,{useState}from'react';import'../CSS/Home.css';import{useNavigate}from'react-router-dom';import chatBotIcon from'../icon/chatBotIcon.png';import userIcon from'../icon/userIcon.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isThinking,setIsThinking]=useState(false);const navigate=useNavigate();const handleSend=async()=>{if(input.trim()==='MCQ'){navigate(\"/question\");}if(input.trim()!==''){setMessages([...messages,{text:input,sender:'user'}]);setIsThinking(true);try{const response=await fetch('https://websitechatbotbackend.onrender.com/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:input})});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const data=await response.json();const botMessage={text:data.response,sender:'bot'};setMessages(prevMessages=>[...prevMessages,botMessage]);}catch(error){const errorMessage={text:'Network error: '+error.message,sender:'bot'};setMessages(prevMessages=>[...prevMessages,errorMessage]);}finally{setIsThinking(false);}setInput('');}};// Function to handle Enter key press\nconst handleKeyPress=event=>{if(event.key==='Enter'){handleSend();}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"uploadPDF\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box\",children:[messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:`chat-bubble ${message.sender}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"img\",{src:message.sender==='user'?userIcon:chatBotIcon,alt:`${message.sender} icon`,className:\"message-icon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"message-text\",children:message.text})]})},index)),isThinking&&/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-is-thinking\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"I am thinking about your question hihi\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dot\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Type a message...\",onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,children:\"Send\"})]})]})]});};export default Home;","map":{"version":3,"names":["React","useState","useNavigate","chatBotIcon","userIcon","jsx","_jsx","jsxs","_jsxs","Home","messages","setMessages","input","setInput","isThinking","setIsThinking","navigate","handleSend","trim","text","sender","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","status","data","json","botMessage","prevMessages","error","errorMessage","handleKeyPress","event","key","children","className","map","index","src","alt","type","value","onChange","e","target","placeholder","onKeyPress","onClick"],"sources":["C:/Users/ASUS/OneDrive/Documents/HeyHiJob/Website/client/src/page/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Home.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport chatBotIcon from '../icon/chatBotIcon.png'\r\nimport userIcon from '../icon/userIcon.png'\r\nconst Home = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isThinking, setIsThinking] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() === 'MCQ') {\r\n      navigate(\"/question\");\r\n    }\r\n    if (input.trim() !== '') {\r\n      setMessages([...messages, { text: input, sender: 'user' }]);\r\n      setIsThinking(true);\r\n      try {\r\n        const response = await fetch('https://websitechatbotbackend.onrender.com/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ message: input }),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n  \r\n        const data = await response.json();\r\n        const botMessage = { text: data.response, sender: 'bot' };\r\n        setMessages(prevMessages => [...prevMessages, botMessage]);\r\n      } catch (error) {\r\n        const errorMessage = { text: 'Network error: ' + error.message, sender: 'bot' };\r\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n      } finally {\r\n        setIsThinking(false);\r\n      }\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  // Function to handle Enter key press\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='uploadPDF'></div>\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-box\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={`chat-bubble ${message.sender}`}>\r\n              <div className=\"message-content\">\r\n                <img\r\n                  src={message.sender === 'user' ? userIcon : chatBotIcon}\r\n                  alt={`${message.sender} icon`}\r\n                  className=\"message-icon\"\r\n                />\r\n                <span className=\"message-text\">{message.text}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isThinking && (\r\n            <div className='chatbot-is-thinking'>\r\n              <p>I am thinking about your question hihi</p>\r\n              <div className='dot'></div>\r\n              <div className='dot'></div>\r\n              <div className='dot'></div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            onKeyPress={handleKeyPress} \r\n          />\r\n          <button onClick={handleSend}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,iBAAiB,CACxB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CACjD,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAC3C,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAAe,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAe,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAIL,KAAK,CAACM,IAAI,CAAC,CAAC,GAAK,KAAK,CAAE,CAC1BF,QAAQ,CAAC,WAAW,CAAC,CACvB,CACA,GAAIJ,KAAK,CAACM,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACvBP,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAES,IAAI,CAAEP,KAAK,CAAEQ,MAAM,CAAE,MAAO,CAAC,CAAC,CAAC,CAC3DL,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6CAA6C,CAAE,CAC1EC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEhB,KAAM,CAAC,CACzC,CAAC,CAAC,CAEF,GAAI,CAACS,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBT,QAAQ,CAACU,MAAM,EAAE,CAAC,CAC3D,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,UAAU,CAAG,CAAEf,IAAI,CAAEa,IAAI,CAACX,QAAQ,CAAED,MAAM,CAAE,KAAM,CAAC,CACzDT,WAAW,CAACwB,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAED,UAAU,CAAC,CAAC,CAC5D,CAAE,MAAOE,KAAK,CAAE,CACd,KAAM,CAAAC,YAAY,CAAG,CAAElB,IAAI,CAAE,iBAAiB,CAAGiB,KAAK,CAACR,OAAO,CAAER,MAAM,CAAE,KAAM,CAAC,CAC/ET,WAAW,CAACwB,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAEE,YAAY,CAAC,CAAC,CAC9D,CAAC,OAAS,CACRtB,aAAa,CAAC,KAAK,CAAC,CACtB,CACAF,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAED;AACA,KAAM,CAAAyB,cAAc,CAAIC,KAAK,EAAK,CAChC,GAAIA,KAAK,CAACC,GAAG,GAAK,OAAO,CAAE,CACzBvB,UAAU,CAAC,CAAC,CACd,CACF,CAAC,CAED,mBACET,KAAA,QAAAiC,QAAA,eACEnC,IAAA,QAAKoC,SAAS,CAAC,WAAW,CAAM,CAAC,cACjClC,KAAA,QAAKkC,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BjC,KAAA,QAAKkC,SAAS,CAAC,UAAU,CAAAD,QAAA,EACtB/B,QAAQ,CAACiC,GAAG,CAAC,CAACf,OAAO,CAAEgB,KAAK,gBAC3BtC,IAAA,QAAiBoC,SAAS,CAAE,eAAed,OAAO,CAACR,MAAM,EAAG,CAAAqB,QAAA,cAC1DjC,KAAA,QAAKkC,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BnC,IAAA,QACEuC,GAAG,CAAEjB,OAAO,CAACR,MAAM,GAAK,MAAM,CAAGhB,QAAQ,CAAGD,WAAY,CACxD2C,GAAG,CAAE,GAAGlB,OAAO,CAACR,MAAM,OAAQ,CAC9BsB,SAAS,CAAC,cAAc,CACzB,CAAC,cACFpC,IAAA,SAAMoC,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAEb,OAAO,CAACT,IAAI,CAAO,CAAC,EACjD,CAAC,EAREyB,KASL,CACN,CAAC,CACD9B,UAAU,eACTN,KAAA,QAAKkC,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAClCnC,IAAA,MAAAmC,QAAA,CAAG,wCAAsC,CAAG,CAAC,cAC7CnC,IAAA,QAAKoC,SAAS,CAAC,KAAK,CAAM,CAAC,cAC3BpC,IAAA,QAAKoC,SAAS,CAAC,KAAK,CAAM,CAAC,cAC3BpC,IAAA,QAAKoC,SAAS,CAAC,KAAK,CAAM,CAAC,EACxB,CACN,EACE,CAAC,cACNlC,KAAA,QAAKkC,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxBnC,IAAA,UACEyC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEpC,KAAM,CACbqC,QAAQ,CAAEC,CAAC,EAAIrC,QAAQ,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACxCI,WAAW,CAAC,mBAAmB,CAC/BC,UAAU,CAAEf,cAAe,CAC5B,CAAC,cACFhC,IAAA,WAAQgD,OAAO,CAAErC,UAAW,CAAAwB,QAAA,CAAC,MAAI,CAAQ,CAAC,EACvC,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}